<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    	http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd
    	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<context:component-scan base-package="com.jing.erp" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/images/**" location="/images/" />
	<resources mapping="/js/**" location="/js/" />
	<resources mapping="/fonts/**" location="/fonts/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>
	
	<!-- 根据客户端的不同的请求决定不同的view进行响应, 如 /blog/1.json /blog/1.xml -->
	<beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property name="order" value="1" />
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<beans:property name="ignoreAcceptHeader" value="true" />

		<!-- 在没有扩展名时即: "/blog/1" 时的默认展现形式 -->
		<beans:property name="defaultContentType" value="text/html" />

		<!-- 扩展名至mimeType的映射,即 /blog.json => application/json -->
		<beans:property name="mediaTypes">
			<beans:map>
				<beans:entry key="html" value="text/html" />
				<beans:entry key="pdf" value="application/pdf" />
				<beans:entry key="xsl" value="application/vnd.ms-excel" />
				<beans:entry key="xml" value="application/xml" />
				<beans:entry key="json" value="application/json" />
			</beans:map>
		</beans:property>

		<!-- 用于开启 /blog/123?format=json 的支持 -->
		<beans:property name="favorParameter" value="false" />
		<beans:property name="viewResolvers">
			<beans:list>
				<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<beans:bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
					<beans:property name="prefix" value="/WEB-INF/view/" />
					<beans:property name="suffix" value=".jsp"></beans:property>
				</beans:bean>
			</beans:list>
		</beans:property>
		<beans:property name="defaultViews">
			<beans:list>
				<beans:bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				<beans:bean class="org.springframework.web.servlet.view.xml.MarshallingView"> 
				  <beans:property name="marshaller"> 
				    <beans:bean class="org.springframework.oxm.xstream.XStreamMarshaller"/> 
				  </beans:property> 
				</beans:bean> 
			</beans:list>
		</beans:property>
	</beans:bean>

  <beans:bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
	  <beans:property name="basenames">
	    <beans:list>
	      <beans:value>message</beans:value>
	      <beans:value>error</beans:value>
	    </beans:list>
	  </beans:property>	
	</beans:bean>
	
	
	<beans:bean id="maxUploadSize" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <beans:property name="maxUploadSize" value="32505856" /><!-- 上传文件大小限制为31M，31*1024*1024 -->
	    <beans:property name="maxInMemorySize" value="4096" />
	</beans:bean>
	
	<ehcache:annotation-driven />  
	
    <ehcache:config cache-manager="cacheManager">  
       <ehcache:evict-expired-elements interval="60" />  
    </ehcache:config>
	
	<beans:bean id="cacheManager"  class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">  
        <beans:property name="configLocation" value="classpath:ehcache.xml" />  
    </beans:bean> 
    
    <!-- 
	<beans:bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">    
	    <beans:property name="supportedMediaTypes">    
	        <beans:list>    
	            <beans:value>application/json;charset=UTF-8</beans:value>    
	       </beans:list>    
	    </beans:property>  
	</beans:bean>
	
	<beans:bean id="mappingStringHttpMessageConverter" class = "org.springframework.http.converter.StringHttpMessageConverter">      
        <beans:property name = "supportedMediaTypes">   
              <beans:list>   
                  <beans:value>text/html;charset=UTF-8</beans:value>   
             </beans:list>      
        </beans:property>      
     </beans:bean>    
	
	<beans:bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >
		<beans:property name="messageConverters">      
	         <beans:list>      
				<beans:ref bean="mappingJacksonHttpMessageConverter" />   
				<beans:ref bean="mappingStringHttpMessageConverter" />
	         </beans:list>      
      	</beans:property>    
	</beans:bean>
	 -->
  
</beans:beans>
